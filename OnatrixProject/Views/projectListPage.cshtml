@using Umbraco.Cms.Web.Common.PublishedModels;
@inherits Umbraco.Cms.Web.Common.Views.UmbracoViewPage
@inject Umbraco.Cms.Web.Common.UmbracoHelper UmbracoHelper
@using Umbraco.Cms.Core
@using Umbraco.Cms.Core.Models.PublishedContent

@{
    Layout = "mainLayout.cshtml";
    ViewBag.Title = Model?.Name("pageTitle") ?? null;

    var selection = Umbraco.Content(Guid.Parse("b0ed4074-a79a-4f4a-8046-7f7cd1ce46df")).ChildrenOfType("projectItemTemplate").Where(x => x.IsVisible());

    var itemsPerPage = 4;
    if (!int.TryParse(Context.Request.Query["page"], out int currentPage))
        currentPage = 1;

    var totalItems = selection?.Count() ?? 0;
    var pagedItems = selection?.Skip((currentPage - 1) * itemsPerPage).Take(itemsPerPage);
}

<section id="our-projects">
    <div class="container">
        <div class="project-projects">
            @if (!string.IsNullOrEmpty(Model.Value("customHeadline").ToString()))
            {
                <div class="project-headline">
                    <h2 class="project-title">@Model.Value("customHeadline")</h2>
                </div>
            }
            @if (pagedItems != null)
            {
                @foreach (var item in pagedItems)
                {
                    var image = item?.Value<IPublishedContent>("thumbnailImage")?.Url() ?? "";
                    var preamble = item?.Value<string>("projectDescription") ?? "";
                    var date = item?.Value<string>("projectDate") ?? "";

                    <div class="project-item">
                        <div class="project-image">
                            <img src="@image" alt="@item.Name()">
                        </div>
                        <div class="project-content">
                            <div class="project-header">
                                <h4>@item.Name()</h4>
                            </div>
                            <div class="project-date">
                                @date
                            </div>
                            <div class="project-description">
                                <p>@preamble</p>
                            </div>
                            <a href="@item.Url()" class="project-read-more">Read More -></a>
                        </div>
                    </div>
                }
            }
        </div>

        <aside class="aside-right">
            <div class="tags">
                @await Html.PartialAsync("Partials/static/tags.cshtml")
            </div>
            <div class="contact">
                @await Html.PartialAsync("Partials/static/onlineSupport.cshtml", new OnatrixProject.Models.OnlineSupportFormModel())
            </div>
        </aside>
    </div>

    <section class="project-pagination">
        <div class="project-container">
            @if (currentPage > 1)
            {
                <a href="?page=@(currentPage - 1)" class="project-change">PREV</a>
            }
            else
            {
                <span class="project-change inactive">PREV</span>
            }

            <ul class="project-pages">
                @for (int i = 1; i <= Math.Ceiling((decimal)totalItems / itemsPerPage); i++)
                {
                    <li class="@((i == currentPage) ? "project-number active" : "project-number")">
                        <a href="?page=@i">@i</a>
                    </li>
                }
            </ul>
            @if (currentPage < Math.Ceiling((decimal)totalItems / itemsPerPage))
            {
                <a href="?page=@(currentPage + 1)" class="project-change">NEXT</a>
            }
            else
            {
                <span class="project-change inactive">NEXT</span>
            }
        </div>
    </section>
</section>
